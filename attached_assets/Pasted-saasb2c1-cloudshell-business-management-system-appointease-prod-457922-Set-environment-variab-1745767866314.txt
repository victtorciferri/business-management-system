saasb2c1@cloudshell:~/business-management-system (appointease-prod-457922)$ # Set environment variables
export PROJECT_ID=$(gcloud config get-value project)
export REGION="southamerica-west1"
export SERVICE_NAME="appointease"
export TAG=$(date +%Y%m%d-%H%M%S)

# Build the Docker image
docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/containers/$SERVICE_NAME:$TAG .

# Push the image to Artifact Registry
docker push $REGION-docker.pkg.dev/$PROJECT_ID/containers/$SERVICE_NAME:$TAG

# Deploy to Cloud Run
gcloud run deploy $SERVICE_NAME \
  --image $REGION-docker.pkg.dev/$PROJECT_ID/containers/$SERVICE_NAME:$TAG \
  --region $REGION \
  --platform managed \
  --allow-unauthenticated \
  --port 8080 \
  --set-env-vars=NODE_ENV=production,DEBUG=express:*
Your active configuration is: [cloudshell-27367]
[+] Building 16.9s (14/15)                                                                                                                                                    docker:default
 => [internal] load build definition from Dockerfile                                                                                                                                    0.0s
 => => transferring dockerfile: 990B                                                                                                                                                    0.0s
 => [internal] load metadata for docker.io/library/node:20-slim                                                                                                                         0.3s
 => [internal] load .dockerignore                                                                                                                                                       0.0s
 => => transferring context: 418B                                                                                                                                                       0.0s
 => [builder 1/8] FROM docker.io/library/node:20-slim@sha256:9513b8d4c59c7c35e76934765add45efb89102d639f945341d7948b168237633                                                           0.0s
 => [internal] load build context                                                                                                                                                       0.0s
 => => transferring context: 20.51kB                                                                                                                                                    0.0s
 => CACHED [stage-1 4/6] RUN npm ci --omit=dev                                                                                                                                          0.0s
 => CACHED [stage-1 5/6] RUN mkdir -p uploads                                                                                                                                           0.0s
 => CACHED [builder 2/8] WORKDIR /app                                                                                                                                                   0.0s
 => CACHED [builder 3/8] COPY package*.json ./                                                                                                                                          0.0s
 => CACHED [builder 4/8] RUN npm ci                                                                                                                                                     0.0s
 => [builder 5/8] COPY . .                                                                                                                                                              0.1s
 => [builder 6/8] RUN npx vite build                                                                                                                                                   14.5s
 => [builder 7/8] RUN sed -i 's/"type": "module"/"type": "commonjs"/' package.json                                                                                                      0.3s 
 => ERROR [builder 8/8] RUN npx esbuild server/index.ts --platform=node --bundle --format=cjs --outdir=dist                                                                             1.6s 
------                                                                                                                                                                                       
 > [builder 8/8] RUN npx esbuild server/index.ts --platform=node --bundle --format=cjs --outdir=dist:                                                                                        
0.885 ▲ [WARNING] "import.meta" is not available with the "cjs" output format and will be empty [empty-import-meta]                                                                          
0.885                                                                                                                                                                                        
0.885     server/index.ts:18:33:                                                                                                                                                             
0.885       18 │ const __filename = fileURLToPath(import.meta.url);                                                                                                                          
0.885          ╵                                  ~~~~~~~~~~~
0.885 
0.885   You need to set the output format to "esm" for "import.meta" to work correctly.
0.885 
0.891 ▲ [WARNING] "import.meta" is not available with the "cjs" output format and will be empty [empty-import-meta]
0.891 
0.891     server/vite.ts:71:32:
0.891       71 │   const distPath = path.resolve(import.meta.dirname, "public");
0.891          ╵                                 ~~~~~~~~~~~
0.891 
0.891   You need to set the output format to "esm" for "import.meta" to work correctly.
0.891 
0.896 ✘ [ERROR] Top-level await is currently not supported with the "cjs" output format
0.896 
0.896     vite.config.ts:15:10:
0.896       15 │           await import("@replit/vite-plugin-cartographer").then((m...
0.896          ╵           ~~~~~
0.896 
1.310 ✘ [ERROR] Could not resolve "lightningcss"
1.310 
1.310     node_modules/vite/dist/node/chunks/dep-DbT5NFX0.js:37952:59:
1.310       37952 │ ...ightningCSS = createCachedImport(() => import('lightningcss'));
1.310             ╵                                                  ~~~~~~~~~~~~~~
1.310 
1.310   You can mark the path "lightningcss" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle. You can also add ".catch()" here to handle this failure at run-time instead of bundle-time.
1.310 
1.318 ✘ [ERROR] Could not resolve "@babel/preset-typescript/package.json"
1.318 
1.318     node_modules/@babel/core/lib/config/files/module-types.js:166:36:
1.318       166 │ ...t packageJson = require("@babel/preset-typescript/package.json");
1.318           ╵                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1.318 
1.318   You can mark the path "@babel/preset-typescript/package.json" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle. You can also surround this "require" call with a try/catch block to handle this failure at run-time instead of bundle-time.
1.318 
1.511 ▲ [WARNING] "import.meta" is not available with the "cjs" output format and will be empty [empty-import-meta]
1.511 
1.511     vite.config.ts:23:24:
1.511       23 │       "@": path.resolve(import.meta.dirname, "client", "src"),
1.511          ╵                         ~~~~~~~~~~~
1.511 
1.511   You need to set the output format to "esm" for "import.meta" to work correctly.
1.511 
1.511 3 of 9 warnings and all 3 errors shown (disable the message limit with --log-limit=0)
------
Dockerfile:20
--------------------
  18 |     
  19 |     # Build the backend with proper CommonJS format
  20 | >>> RUN npx esbuild server/index.ts --platform=node --bundle --format=cjs --outdir=dist
  21 |     
  22 |     # Runtime stage
--------------------
ERROR: failed to solve: process "/bin/sh -c npx esbuild server/index.ts --platform=node --bundle --format=cjs --outdir=dist" did not complete successfully: exit code: 1
The push refers to repository [southamerica-west1-docker.pkg.dev/appointease-prod-457922/containers/appointease]
tag does not exist: southamerica-west1-docker.pkg.dev/appointease-prod-457922/containers/appointease:20250427-152749
Deploying container to Cloud Run service [appointease] in project [appointease-prod-457922] region [southamerica-west1]
X  Deploying...                                                                                                                                                                             
  -  Creating Revision...                                                                                                                                                                   
  .  Routing traffic...                                                                                                                                                                     
  OK Setting IAM Policy...                                                                                                                                                                  
Deployment failed                                                                                                                                                                           
ERROR: (gcloud.run.deploy) Revision 'appointease-00034-rrn' is not ready and cannot serve traffic. Image 'southamerica-west1-docker.pkg.dev/appointease-prod-457922/containers/appointease:20250427-152749' not found.
saasb2c1@cloudshell:~/business-management-system (appointease-prod-457922)$ 