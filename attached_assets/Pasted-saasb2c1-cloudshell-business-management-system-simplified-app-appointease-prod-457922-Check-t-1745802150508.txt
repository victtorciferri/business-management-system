saasb2c1@cloudshell:~/business-management-system/simplified-app (appointease-prod-457922)$ # Check the database URL to see what's wrong
cd ~/business-management-system/simplified-app
echo "Checking database URL format..."
gcloud secrets versions access latest --secret="database-url" | sed 's/:[^:]*@/@/g'

# Let's check if we can resolve the hostname
gcloud secrets versions access latest --secret="database-url" | grep -o '@[^:]*:' | tr -d '@:' | xargs host

# If DNS resolution fails, let's create a new database
echo "Creating a new Cloud SQL PostgreSQL database if needed..."
# Check if we already have a CloudSQL instance
gcloud sql instances list

# If no instance exists:
PROJECT_ID=$(gcloud config get-value project)
gcloud sql instances create appointease-db \
  --database-version=POSTGRES_14 \
  --tier=db-f1-micro \
  --region=southamerica-west1 \
  --root-password=appointease-root-password \
  --storage-size=10GB

# Create a database
gcloud sql databases create appointease \
  --instance=appointease-db

# Create a user
gcloud sql users create appointease \
  --instance=appointease-db \
  --password=appointease-db-password

# Get the connection details
INSTANCE_CONNECTION_NAME=$(gcloud sql instances describe appointease-db --format='value(connectionName)')
DB_IP=$(gcloud sql instances describe appointease-db --format='value(ipAddresses[0].ipAddress)')

# Create a new database URL secret
NEW_DB_URL="postgres://appointease:appointease-db-password@${DB_IP}:5432/appointease"
  --update-secrets="DATABASE_URL=new-database-url:latest"intease-secret-key" \' : 'Not configured'}</p>d = $1',ccountEmail)')
Checking database URL format...

Usage: host [-aCdilrTvVw] [-c class] [-N ndots] [-t type] [-W time]
            [-R number] [-m flag] [-p port] hostname [server]
       -a is equivalent to -v -t ANY
       -A is like -a but omits RRSIG, NSEC, NSEC3
       -c specifies query class for non-IN data
       -C compares SOA records on authoritative nameservers
       -d is equivalent to -v
       -l lists all hosts in a domain, using AXFR
       -m set memory debugging flag (trace|record|usage)
       -N changes the number of dots allowed before root lookup is done
       -p specifies the port on the server to query
       -r disables recursive processing
       -R specifies number of retries for UDP packets
       -s a SERVFAIL response should stop query
       -t specifies the query type
       -T enables TCP/IP mode
       -U enables UDP mode
       -v enables verbose output
       -V print version number and exit
       -w specifies to wait forever for a reply
       -W specifies how long to wait for a reply
       -4 use IPv4 query transport only
       -6 use IPv6 query transport only
Creating a new Cloud SQL PostgreSQL database if needed...
NAME: appointease-db
DATABASE_VERSION: POSTGRES_16
LOCATION: southamerica-west1-b
TIER: db-custom-2-8192
PRIMARY_ADDRESS: 34.176.74.36
PRIVATE_ADDRESS: -
STATUS: RUNNABLE
Your active configuration is: [cloudshell-14847]
ERROR: (gcloud.sql.instances.create) Resource in projects [appointease-prod-457922] is the subject of a conflict: The Cloud SQL instance already exists.
Creating Cloud SQL database...done.                                                                                                                                                         
Created database [appointease].
instance: appointease-db
name: appointease
project: appointease-prod-457922
Creating Cloud SQL user...done.                                                                                                                                                             
Created user [appointease].
Created version [1] of the secret [new-database-url].
ERROR: (gcloud.secrets.add-iam-policy-binding) Status code: 400. Invalid service account ()..

added 83 packages, and audited 84 packages in 6s

14 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
Missing database URLs. Please provide SOURCE_DB_URL and TARGET_DB_URL
Building using Dockerfile and deploying container to Cloud Run service [appointease] in project [appointease-prod-457922] region [southamerica-west1]
-  Building and deploying... Uploading sources.                                                                                                                                             
-  Building and deploying... Uploading sources.                                                                                                                                             
X  Building and deploying... Building Container.                                                                                                                                            
  OK Uploading sources...                                                                                                                                                                   
  OK Building Container... Logs are available at [https://console.cloud.google.com/cloud-build/builds;region=southamerica-west1/10d07e89-9e22-4e14-b4a6-f9acf619b827?project=249754346416]. 
  -  Creating Revision...                                                                                                                                                                   
Creating temporary archive of 773 file(s) totalling 3.9 MiB before compression.
  OK Setting IAM Policy...                                                                                                                                                                  
Deployment failed                                                                                                                                                                           
ERROR: (gcloud.run.deploy) Revision 'appointease-00045-9hm' is not ready and cannot serve traffic. spec.template.spec.containers[0].env[0].value_from.secret_key_ref.name: Permission denied on secret: projects/249754346416/secrets/new-database-url/versions/latest for Revision service account 249754346416-compute@developer.gserviceaccount.com. The service account used must be granted the 'Secret Manager Secret Accessor' role (roles/secretmanager.secretAccessor) at the secret, project or higher level.
saasb2c1@cloudshell:~/business-management-system/simplified-app (appointease-prod-457922)$ 